#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

package(default_visibility = [
    "//test/integration/graql/reasoner:__subpackages__",
    "//test/integration/graql/reasoner/cache:__subpackages__",
])

filegroup(
    name = "generic-schema",
    srcs = ["genericSchema.gql"],
)

filegroup(
    name = "generic-schema-refactored",
    srcs = ["genericSchemaRefactored.gql"],
)

filegroup(
    name = "explicit-ownership-relation-applicability",
    srcs = ["explicitOwnershipRelationApplicabilityTest.gql"],
)

filegroup(
    name = "resource-applicability",
    srcs = ["resourceApplicabilityTest.gql"],
)

filegroup(
    name = "role-inference",
    srcs = ["roleInferenceTest.gql"],
)

filegroup(
    name = "rule-applicability",
    srcs = ["ruleApplicabilityTest.gql"],
)

filegroup(
    name = "rule-applicability-new",
    srcs = ["ruleApplicabilityTest2.gql"],
)

filegroup(
    name = "matching-types",
    srcs = ["matchingTypesTest.gql"],
)

filegroup(
    name = "materialisation",
    srcs = ["materialisationTest.gql"],
)

filegroup(
    name = "unification-with-types",
    srcs = ["unificationWithTypesTest.gql"],
)

filegroup(
    name = "diagonal-test",
    srcs = ["diagonalTest.gql"],
)

filegroup(
    name = "dual-linear-transitivity",
    srcs = ["dualLinearTransitivity.gql"],
)

filegroup(
    name = "path-test",
    srcs = ["pathTest.gql"],
)

filegroup(
    name = "path-test-symmetric",
    srcs = ["pathTest-symmetric.gql"],
)

filegroup(
    name = "linear-transivity",
    srcs = ["linearTransitivity.gql"],
)

filegroup(
    name = "multi-join",
    srcs = ["multiJoin.gql"],
)

filegroup(
    name = "quadratic-transitivity",
    srcs = ["quadraticTransitivity.gql"],
)

filegroup(
    name = "resolution-plan",
    srcs = ["resolutionPlanTest.gql"],
)

filegroup(
    name = "reasoner-logback-test",
    srcs = ["logback.xml"],
)
