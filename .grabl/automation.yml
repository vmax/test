build:
  quality:
    job:
      dependency-analysis:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          echo "workflow quality: dependency-analysis"
  correctness:
    jobs:
      build:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel build --config=rbe //...
      common:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //common/... --test_output=errors
      server:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //server/... --test_output=errors
      graql:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //graql/... --test_output=errors
      behaviour:
        machine: grabl-ubuntu-2004
        type: foreground
        timeout: "3600"
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //test/behaviour/... --test_output=errors
      integration:
        machine: grabl-ubuntu-2004
        type: foreground
        timeout: "3600"
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //test/integration/... --test_output=errors
      assembly:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel test --config=rbe //test/assembly:test-assembly --test_output=streamed --spawn_strategy=local
      assembly-linux-targz:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
          sudo mkdir -p /home/circleci/.credentials/ && sudo chmod a+w /home/circleci/.credentials/ && bash ./rbe.sh && rm ./rbe.sh
          bazel build --config=rbe //:assemble-linux-targz
          # TEST_CACHE_TOKEN=$REPO_GITHUB_TOKEN bazel run @graknlabs_dependencies//tool/cache:cache -- --file $(pwd)/bazel-bin/grakn-core-all-linux.tar.gz --get
          tar -xf bazel-bin/grakn-core-all-linux.tar.gz -C bazel-bin
          nohup bazel-bin/grakn-core-all-linux/grakn server start
          bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=local --cache_test_results=no
          bazel-bin/grakn-core-all-linux/grakn server stop
          # TEST_CACHE_TOKEN=$REPO_GITHUB_TOKEN bazel run @graknlabs_dependencies//tool/cache:cache -- --file $(pwd)/bazel-bin/grakn-core-all-linux.tar.gz --save-success
      assembly-docker:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          git clone https://github.com/graknlabs-test/grakn.git
          cd grakn
          test/assembly/docker.py
    execution:
      - build
      - common
      - server
      - graql
      - behaviour
      - integration
      - assembly
      - assembly-linux-targz
      - assembly-docker
  performance:
    jobs:
      run-grakn:
        machine: grabl-ubuntu-2004
        type: background
        timeout: "18000"
        script: |
          git clone https://github.com/graknlabs/grakn.git
          cd grakn
          bazel build //:assemble-linux-targz
          mkdir dist
          tar -xf ./bazel-bin/grakn-core-all-linux.tar.gz -C ./dist/
          cd ./dist/grakn-core-all-linux/
          ./grakn server start -- \
            --tracing-uri $GRABL_TRACING_URI \
            --tracing-username lriuui0x0 \
            --tracing-access-token $GRABL_TOKEN
          export GRABL_EXPORT_PERFORMANCE_GRAKN_URI="${HOSTNAME}:48555"
          cat logs/grakn.log
          
      test-performance-big-grakn:
        machine: grabl-ubuntu-2004
        type: foreground
        timeout: "18000"
        script: |
          git clone https://github.com/jmsfltchr/simulation.git
          cd simulation
          git fetch --all
          git checkout testing
          cat > config.yml << EOF
          agents:
            # For each agent select a `mode`, `"run"` to run without tracing, `"trace"` to run with tracing, any other input to
            # not run or trace
            - name: "marriage"
              mode: "trace"
            - name: "personBirth"
              mode: "trace"
            - name: "ageUpdate"
              mode: "trace"
            - name: "parentship"
              mode: "off"
            - name: "relocation"
              mode: "off"
            - name: "company"
              mode: "off"
            - name: "employment"
              mode: "off"
            - name: "product"
              mode: "off"
            - name: "transaction"
              mode: "off"
            - name: "friendship"
              mode: "off"
          traceSampling:
            # Options: `"every"` for every K traces; `"log"` for logarithm with base N
            function: "every"
            arg: 1
          randomSeed: 1
          iterations: 5
          scaleFactor: 2
          databaseName: "world"
          EOF
          bazel run \
            //:simulation -- \
            --database grakn \
            --database-uri $GRABL_EXPORT_PERFORMANCE_GRAKN_URI \
            --tracing-uri $GRABL_TRACING_URI \
            --org $GRABL_OWNER \
            --repo $GRABL_REPO \
            --commit $GRABL_COMMIT \
            --username $GRABL_OWNER \
            --api-token $GRABL_TOKEN \
            --config-file /home/grabl/simulation/config.yml

      run-neo4j:
        machine: grabl-ubuntu-2004
        type: background
        timeout: "18000"
        script: |
          sudo add-apt-repository -y ppa:openjdk-r/ppa
          curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
          curl https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo apt-get update
          wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -
          echo 'deb https://debian.neo4j.com stable 4.1' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
          sudo apt-get update
          sudo apt-get install -y neo4j=1:4.1.0
          sudo update-java-alternatives --jre --set java-1.11.0-openjdk-amd64
          echo 'dbms.connectors.default_listen_address=0.0.0.0' | sudo tee -a /etc/neo4j/neo4j.conf
          echo 'dbms.security.auth_enabled=false' | sudo tee -a /etc/neo4j/neo4j.conf
          ps aux | grep "org.neo4j.server" | awk '{print $2}' | xargs sudo kill -9 >/dev/null 2&>1 || true
          sudo neo4j start
          export GRABL_EXPORT_PERFORMANCE_NEO4J_URI="bolt://${HOSTNAME}:7687"

      test-performance-big-neo4j:
        machine: grabl-ubuntu-2004
        type: foreground
        timeout: "18000"
        script: |
          git clone https://github.com/jmsfltchr/simulation.git
          cd simulation
          git fetch --all
          git checkout testing
          cat > config.yml << EOF
          agents:
            # For each agent select a `mode`, `"run"` to run without tracing, `"trace"` to run with tracing, any other input to
            # not run or trace
            - name: "marriage"
              mode: "trace"
            - name: "personBirth"
              mode: "trace"
            - name: "ageUpdate"
              mode: "trace"
            - name: "parentship"
              mode: "off"
            - name: "relocation"
              mode: "off"
            - name: "company"
              mode: "off"
            - name: "employment"
              mode: "off"
            - name: "product"
              mode: "off"
            - name: "transaction"
              mode: "off"
            - name: "friendship"
              mode: "off"
          traceSampling:
            # Options: `"every"` for every K traces; `"log"` for logarithm with base N
            function: "every"
            arg: 1
          randomSeed: 1
          iterations: 5
          scaleFactor: 2
          databaseName: "world"
          EOF
          bazel run \
            //:simulation -- \
            --database neo4j \
            --database-uri $GRABL_EXPORT_PERFORMANCE_NEO4J_URI \
            --tracing-uri $GRABL_TRACING_URI \
            --org $GRABL_OWNER \
            --repo $GRABL_REPO \
            --commit $GRABL_COMMIT \
            --username $GRABL_OWNER \
            --api-token $GRABL_TOKEN \
            --config-file /home/grabl/simulation/config.yml

    execution:
      - run-grakn
      - test-performance-big-grakn:
         depends: [run-grakn]
      - run-neo4j
      - test-performance-big-neo4j:
         depends: [run-neo4j]


release:
  validation:
    job:
      validate-dependencies:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          echo "workflow validation: validate-dependencies"
  deployment:
    job:
      deploy-workbase:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          echo "workflow deployment: deploy-workbase"
  broadcast:
    job:
      broadcast-version:
        machine: grabl-ubuntu-2004
        type: foreground
        script: |
          echo "workflow bump: bump-version"

